with raw_data as (
    select 
        coalesce(event.value:sport_event.id::string, 'unknown') as event_id,
        coalesce(team.value:id::string, 'unknown') as competitor_id,
        coalesce(team.value:statistics.ball_possession::int, 0) as ball_possession,
        coalesce(team.value:statistics.cards_given::int, 0) as cards_given,
        coalesce(team.value:statistics.chances_created::int, 0) as chances_created,
        coalesce(team.value:statistics.clearances::int, 0) as clearances,
        coalesce(team.value:statistics.corner_kicks::int, 0) as corner_kicks,
        coalesce(team.value:statistics.crosses_successful::int, 0) as crosses_successful,
        coalesce(team.value:statistics.crosses_total::int, 0) as crosses_total,
        coalesce(team.value:statistics.crosses_unsuccessful::int, 0) as crosses_unsuccessful,
        coalesce(team.value:statistics.defensive_blocks::int, 0) as defensive_blocks,
        coalesce(team.value:statistics.diving_saves::int, 0) as diving_saves,
        coalesce(team.value:statistics.dribbles_completed::int, 0) as dribbles_completed,
        coalesce(team.value:statistics.fouls::int, 0) as fouls,
        coalesce(team.value:statistics.free_kicks::int, 0) as free_kicks,
        coalesce(team.value:statistics.goal_kicks::int, 0) as goal_kicks,
        coalesce(team.value:statistics.interceptions::int, 0) as interceptions,
        coalesce(team.value:statistics.long_passes_successful::int, 0) as long_passes_successful,
        coalesce(team.value:statistics.long_passes_total::int, 0) as long_passes_total,
        coalesce(team.value:statistics.long_passes_unsuccessful::int, 0) as long_passes_unsuccessful,
        coalesce(team.value:statistics.loss_of_possession::int, 0) as loss_of_possession,
        coalesce(team.value:statistics.offsides::int, 0) as offsides,
        coalesce(team.value:statistics.passes_successful::int, 0) as passes_successful,
        coalesce(team.value:statistics.passes_total::int, 0) as passes_total,
        coalesce(team.value:statistics.passes_unsuccessful::int, 0) as passes_unsuccessful,
        coalesce(team.value:statistics.red_cards::int, 0) as red_cards,
        coalesce(team.value:statistics.shots_blocked::int, 0) as shots_blocked,
        coalesce(team.value:statistics.shots_off_target::int, 0) as shots_off_target,
        coalesce(team.value:statistics.shots_on_target::int, 0) as shots_on_target,
        coalesce(team.value:statistics.shots_saved::int, 0) as shots_saved,
        coalesce(team.value:statistics.shots_total::int, 0) as shots_total,
        coalesce(team.value:statistics.substitutions::int, 0) as substitutions,
        coalesce(team.value:statistics.tackles_successful::int, 0) as tackles_successful,
        coalesce(team.value:statistics.tackles_total::int, 0) as tackles_total,
        coalesce(team.value:statistics.tackles_unsuccessful::int, 0) as tackles_unsuccessful,
        coalesce(team.value:statistics.throw_ins::int, 0) as throw_ins,
        coalesce(team.value:statistics.was_fouled::int, 0) as was_fouled,
        coalesce(team.value:statistics.yellow_cards::int, 0) as yellow_cards,
        coalesce(team.value:statistics.yellow_red_cards::int, 0) as yellow_red_cards
    from {{ source('liverpool', 'sportradar_data') }},
    lateral flatten(input => data:summaries) event,
    lateral flatten(input => event.value:statistics.totals.competitors) team
)

select
    competitor_id,
    event_id,
    ball_possession,
    cards_given,
    chances_created,
    clearances,
    corner_kicks,
    crosses_successful,
    crosses_total,
    crosses_unsuccessful,
    defensive_blocks,
    diving_saves,
    dribbles_completed,
    fouls,
    free_kicks,
    goal_kicks,
    interceptions,
    long_passes_successful,
    long_passes_total,
    long_passes_unsuccessful,
    loss_of_possession,
    offsides,
    passes_successful,
    passes_total,
    passes_unsuccessful,
    red_cards,
    shots_blocked,
    shots_off_target,
    shots_on_target,
    shots_saved,
    shots_total,
    substitutions,
    tackles_successful,
    tackles_total,
    tackles_unsuccessful,
    throw_ins,
    was_fouled,
    yellow_cards,
    yellow_red_cards
from raw_data